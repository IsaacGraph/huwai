{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/native-storage/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,OAAO,EAAE,MAAM,EAAE,iBAAiB,EAAE,MAAM,oBAAoB;AAGvE;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AASH;IAAmC,iCAAiB;IAApD;QAAmC,8BAAiB;IAuCpD,CAAC;IAtCC;;;;;OAKG;IAEH,+BAAO,GAAP,UAAQ,SAAiB,EAAE,KAAU,IAAiB,MAAM,CAAC,CAAC,CAAC;IAE/D;;;;OAIG;IAEH,+BAAO,GAAP,UAAQ,SAAiB,IAAiB,MAAM,CAAC,CAAC,CAAC;IAEnD;;;;OAIG;IAEH,8BAAM,GAAN,UAAO,SAAiB,IAAiB,MAAM,CAAC,CAAC,CAAC;IAElD;;;OAGG;IAEH,6BAAK,GAAL,cAAuB,MAAM,CAAC,CAAC,CAAC;IAE3B,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA/BA;QAAC,OAAO,EAAE;;;;gDAAA;IAQV;QAAC,OAAO,EAAE;;;;gDAAA;IAQV;QAAC,OAAO,EAAE;;;;+CAAA;IAOV;QAAC,OAAO,EAAE;;;;8CAAA;IAtCZ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,eAAe;YAC3B,MAAM,EAAE,8BAA8B;YACtC,SAAS,EAAE,eAAe;YAC1B,IAAI,EAAE,iEAAiE;YACvE,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC;SACzC,CAAC;;qBAAA;IAyCF,oBAAC;AAAD,CAAC,AAvCD,CAAmC,iBAAiB,GAuCnD","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n\r\n/**\r\n * @name Native Storage\r\n * @description Native storage of variables in Android and iOS\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { NativeStorage } from '@ionic-native/native-storage';\r\n *\r\n * constructor(private nativeStorage: NativeStorage) { }\r\n *\r\n * ...\r\n *\r\n * this.nativeStorage.setItem('myitem', {property: 'value', anotherProperty: 'anotherValue'})\r\n *   .then(\r\n *     () => console.log('Stored item!'),\r\n *     error => console.error('Error storing item', error)\r\n *   );\r\n *\r\n * this.nativeStorage.getItem('myitem')\r\n *   .then(\r\n *     data => console.log(data),\r\n *     error => console.error(error)\r\n *   );\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'NativeStorage',\r\n  plugin: 'cordova-plugin-nativestorage',\r\n  pluginRef: 'NativeStorage',\r\n  repo: 'https://github.com/TheCocoaProject/cordova-plugin-nativestorage',\r\n  platforms: ['Android', 'iOS', 'Windows']\r\n})\r\n\r\nexport class NativeStorage extends IonicNativePlugin {\r\n  /**\r\n   * Stores a value\r\n   * @param reference {string}\r\n   * @param value\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  setItem(reference: string, value: any): Promise<any> {return; }\r\n\r\n  /**\r\n   * Gets a stored item\r\n   * @param reference {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  getItem(reference: string): Promise<any> {return; }\r\n\r\n  /**\r\n   * Removes a single stored item\r\n   * @param reference {string}\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  remove(reference: string): Promise<any> {return; }\r\n\r\n  /**\r\n   * Removes all stored values.\r\n   * @returns {Promise<any>}\r\n   */\r\n  @Cordova()\r\n  clear(): Promise<any> {return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}